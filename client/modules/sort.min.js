Fancy.modules.sort=!0,Fancy.Mixin("Fancy.store.mixin.Sort",{multiSortLimit:3,sort(e,r,t,s={}){let o,a,i=this,n=i.widget;switch(i.fire("beforesort",{key:"key",action:e}),i.multiSort&&!0!==i.multiSortInited&&i.initMultiSort(),r){case"number":case"checkbox":case"select":case"switcher":case"progressdonut":case"progressbar":case"grossloss":case"date":case"currency":o="sortNumber",a="number";break;case"string":case"combo":case"text":case"color":case"tree":o="sortString",a="string";break;default:throw new Error("[FancyGrid Error] - does not exist sort function for type "+r)}if(i.multiSort?i.addSorter(t,e.toLocaleUpperCase(),a):(i.sorters=[],"DROP"!==e.toLocaleUpperCase()&&i.sorters.push({key:t,dir:e.toLocaleUpperCase(),type:a,_type:r,options:s})),i.remoteSort)i.serverSort(e,r,t,!0!==n.stateIsWaiting);else{if(s.type=r,"drop"===e?delete i.order:i[o](e,t,s),i.multiSort)for(var c=0,l=i.sorters.length-1;c<l;c++)i.multiSortOrder(c);!1!==s.update&&i.changeDataView(),i.fire("sort",{key:t,action:e})}},serverSort(e,r,t,s){const o=this;o.params=o.params||{},o.multiSort?o.params.sorters=o.sorters:(o.params[o.sortParam]=t,"drop"===e?delete o.params[o.directionParam]:o.params[o.directionParam]=e),o.once("serversuccess",()=>{o.fire("sort",{key:t,action:e})}),!1!==s&&o.loadData()},sortNumber(e,r,t){var s,o=this,a=[],i=t.sorter;if(o.isTree){a=o.getColumnOriginalValues("id");const t=o.treeGetDataAsTree(),n=o.treeSort(t,e,r,"number",i);s=o.treeReadSortedId(n)}else if(o.grouping){const n=o.getColumnOriginalValuesByGroup(r,o.grouping.by,t);switch(s=[],l=0,d=n.length,e){case"asc":for(;l<d;l++)a=a.concat(n[l].values),s=i?s.concat(n[l].values.sort(function(e,r){return i("asc",e,r)})):s.concat(n[l].values.sort(function(e,r){return e-r}));break;case"desc":for(;l<d;l++)a=a.concat(n[l].values),s=i?s.concat(n[l].values.sort(function(e,r){i("desc",e,r)})):s.concat(n[l].values.sort(function(e,r){return r-e}))}}else{a=o.getColumnOriginalValues(r,t),"$selected"===r&&(a=a.map(function(e){return!!e}));for(var n=[],c=Fancy.Array.copy(a),l=0,d=c.length;l<d;l++)isNaN(c[l])&&(n.push(c[l]),c.splice(l,1),d--);switch(e){case"asc":s=(s=i?Fancy.Array.copy(c).sort((e,r)=>i("asc",e,r)):Fancy.Array.copy(c).sort((e,r)=>e-r)).concat(n);break;case"desc":s=i?Fancy.Array.copy(c).sort((e,r)=>i("desc",e,r)):Fancy.Array.copy(c).sort((e,r)=>r-e),s=n.concat(s)}}o.order=o.getOrder(a,s)},sortString(e,r,t){var s,o,a,i=this,n=[],c=t.sorter;if(i.isTree){n=i.getColumnOriginalValues("id");const t=i.treeGetDataAsTree(),o=i.treeSort(t,e,r,"string",c);s=i.treeReadSortedId(o)}else if(i.grouping){const l=i.getColumnOriginalValuesByGroup(r,i.grouping.by,t);switch(s=[],o=0,a=l.length,e){case"asc":for(;o<a;o++)n=n.concat(l[o].values),s=c?s.concat(l[o].values.sort(function(e,r){return c("asc",e,r)})):s.concat(l[o].values.sort());break;case"desc":for(;o<a;o++)n=n.concat(l[o].values),s=c?s.concat(l[o].values.sort(function(e,r){return c("desc",e,r)})):s.concat(l[o].values.sort().reverse())}}else switch(n=i.getColumnOriginalValues(r,t),e){case"asc":s=c?Fancy.Array.copy(n).sort(function(e,r){return c("asc",e,r)}):Fancy.Array.copy(n).sort();break;case"desc":s=c?Fancy.Array.copy(n).sort(function(e,r){return c("desc",e,r)}):(s=Fancy.Array.copy(n).sort()).reverse()}i.order=i.getOrder(n,s)},getOrder(e,r){for(var t,s={},o=0,a=e.length,i=[];o<a;o++){var n=e[o];void 0===s[n]&&(s[n]=[]),s[n].push(o)}for(o=0;o<a;o++)t=s[n=r[o]],i.push(t[0]),t.length>1&&t.splice(0,1);return i},changeOrderIndexes(e,r){const t=this;if(void 0===r&&(r="-"),void 0===t.order)return;let s=0,o=t.order.length;if("-"===r)for(;s<o;s++)t.order[s]>e&&t.order[s]--;else for(;s<o;s++)t.order[s]>=e&&t.order[s]++},initMultiSort(){const e=this;e.multiSortInited=!0,e.sorters||(e.sorters=[])},addSorter(e,r,t){for(var s=this,o=0,a=s.sorters.length;o<a;o++)if(s.sorters[o].key===e){s.sorters.splice(o,1);break}"DROP"!==r.toLocaleUpperCase()&&(s.sorters.push({key:e,dir:r.toLocaleUpperCase(),type:t}),s.sorters.length>s.multiSortLimit&&s.sorters.shift())},multiSortOrder(e){for(var r,t,s,o=this,a=o.widget.store,i=o.sorters[e],n=o.sorters[e+1].key,c=i.key,l=0,d=a.data.length,u=[],g=[],h=[];l<d;l++)r=a.get(o.order[l],n,!0),s=a.get(o.order[l],c,!0),r===t?(u[u.length-1].push(s),g[g.length-1].push(o.order[l])):(u.push([s]),g.push([o.order[l]])),t=r;for(l=0,d=g.length;l<d;l++){if(1===g[l].length){h.push(g[l][0]);continue}let e;if("number"===i.type)switch(i.dir){case"ASC":e=Fancy.Array.copy(u[l]).sort(function(e,r){return e-r});break;case"DESC":e=Fancy.Array.copy(u[l]).sort(function(e,r){return r-e})}else if("string"===i.type)switch(i.dir){case"ASC":e=Fancy.Array.copy(u[l]).sort();break;case"DESC":e=Fancy.Array.copy(u[l]).sort().reverse()}for(var p,y=g[l],m=[],f=0,C=(p=o.getOrder(u[l],e)).length;f<C;f++)m.push(y[p[f]]);h=h.concat(m)}o.order=h},reSort(){const e=this;Fancy.each(e.sorters,r=>{e.sort(r.dir.toLocaleLowerCase(),r.type,r.key,{update:!1})})}}),function(){const e=Fancy,r=e.GRID_COLUMN_SORT_ASC,t=e.GRID_COLUMN_SORT_DESC,s=e.GRID_COLUMN_RESIZER_CLS,o=e.FIELD_CLS,a=e.GRID_CENTER_CLS,i=e.GRID_LEFT_CLS,n=e.GRID_RIGHT_CLS;e.define("Fancy.grid.plugin.Sorter",{extend:e.Plugin,ptype:"grid.sorter",inWidgetName:"sorter",constructor:function(){this.Super("const",arguments)},init(){this.Super("init",arguments),this.ons()},ons(){const e=this;e.widget.once("render",()=>e.onsHeaders())},onsHeaders(){this.widget.on("headercellclick",this.onHeaderCellClick,this)},onHeaderCellClick(a,i){var n,c,l,d,u=this.widget,g=u.columndrag,h=e.get(i.cell),p=i.side,y=i.index,m=i.e.target;if(g&&"dragging"===g.status)return;if("input"===m.tagName.toLocaleLowerCase())return;const f=h.select(`.${o}`);f.length>0&&!0===f.item(0).within(m)||h.hasCls(s)||u.startResizing||(c=u.getColumns(p),n=h.hasCls(r)?"desc":h.hasCls(t)?u.multiSort?"asc":"drop":"asc",d=(l=c[y]).index,!1!==l.headerClickSort&&this.sort(n,d,p,l,h))},sort(s,o,a,i,n,c){var l,d=this.widget,u=d.store,g=d.getColumns(a),h=0,p=g.length,y=d.getHeader(a);if(d.sorting=!0,!i||!n)for(;h<p;h++)if(g[h].index===o){i=g[h],n=y.getCell(h);break}if(!0!==i.sortable)return;if(d.multiSort?this.clearHeaderMultiSortCls(s,n):this.clearHeaderSortCls(),!i.headerCheckBox)switch(s){case"asc":n.addCls(r);break;case"desc":n.addCls(t)}let m,f;if(l=i.type,i.format)if(e.isString(i.format))switch(i.format){case"date":m=d.lang.date.read,i.format.mode&&(f=i.format.mode)}else switch(i.type){case"date":m=i.format.read,i.format.mode&&(f=i.format.mode)}d.grouping&&d.grouping.by&&u.remoteSort&&u.once("load",()=>{d.grouping.reGroup()}),u.sort(s,l,o,{smartIndexFn:i.smartIndexFn,format:m,mode:f,sorter:i.sorter,update:!1!==c}),!1!==c&&d.update(),delete d.sorting},clearSort(){const e=this.widget,r=e.store;this.clearHeaderSortCls(),e.sorting=!0,delete r.order,r.changeDataView(),delete e.sorting},clearHeaderMultiSortCls(e,s){let o;var c,l,d=this.widget,u=d.store;switch(e.toLocaleUpperCase()){case"ASC":s.removeCls(t);break;case"DESC":s.removeCls(r)}if(c=d.el.select(`.${r}`),l=d.el.select(`.${t}`),c.length+l.length<u.multiSortLimit)return;let g=0,h=c.length;for(var p;g<h;g++){var y=(f=c.item(g)).parent().parent(),m=f.attr("index");y.hasCls(a)?C="center":y.hasCls(i)?C="left":y.hasCls(n)&&(C="right"),S=d.getColumns(C)[m].index,(o=u.sorters[0]).key===S&&(p=f)}for(g=0,h=l.length;g<h;g++){var f,C,S;y=(f=l.item(g)).parent().parent(),m=f.attr("index");y.hasCls(a)?C="center":y.hasCls(i)?C="left":y.hasCls(n)&&(C="right"),S=d.getColumns(C)[m].index,(o=u.sorters[0]).key===S&&(p=f)}p.removeCls(r),p.removeCls(t)},clearHeaderSortCls(){const e=this.widget.el;e.select(`.${r}`).removeCls(r),e.select(`.${t}`).removeCls(t)},updateSortedHeader(){var s=this.widget,o=s.store;this.clearHeaderSortCls(),e.each(o.sorters,e=>{const o=s.getColumnOrderByKey(e.key),a="ASC"===e.dir?r:t;if(!o.side)return;const i=s.getHeader(o.side).getCell(o.order);i&&i.addCls(a)})}})}();